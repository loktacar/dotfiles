" vim: set fdm=marker:
"
" @author: Viktor Alex Brynjarsson
" My .vimrc

" First things first
" Use pathogen (vim plugin bundler)
runtime bundle/pathogen/autoload/pathogen.vim
call pathogen#infect()
call pathogen#helptags()

" Syntax highlighting
syntax enable
" Load filetype plugins and indentation
filetype plugin indent on

" {{{ UI Configuration

if has("gui_running")
  " Font option depends on platform
  if has("win32")
    set guifont=Andale\ Mono:h10:cDEFAULT
  else
    set guifont=DejaVu\ Sans\ Mono\ for\ Powerline\ 10
  endif

  " set guioptions
  set guioptions=a "Autoselect
  set guioptions+=c "Console dialog instead of popup
  set guioptions+=h "Limit horizontal scrollbar to cursor line length
  set guioptions+=e "Add gui tab pages when needed
  set guioptions+=g "Gray non-active menu items
  set guioptions+=i "Use the Vim icon
  set guioptions+=r "Right hand scrollbar always present
  set guioptions+=L "Left hand scrollbar when needed
  set guioptions+=m "Menu bar is present

  " Use anti-aliasing
  set antialias
end

" Using putty I get the wrong t_Co value
if (&term == "xterm")
  set t_Co=256
elseif (&term == "screen-bce")
  set t_Co=256
endif

" colorscheme (works in both gvim and vim)
colorscheme flatcolor

" Status line
set laststatus=2
set statusline=%f%m%r%w\  " Modified, read-only, and preview flags
set statusline+=%Y\  " Type of file
set statusline+=%{&fenc==\"\"?&enc:&fenc}\  " File encoding
set statusline+=%{&ff}\  " File format
set statusline+=%=\  " Split left and right
set statusline+=(\line:\ \%l/\%L\ %p%%)\  " Current, total and percentage lines
set statusline+=(\col.:\ %v)\  " Column number
set statusline+=(\buf.:\ %n)  " Buffer number

" }}}

" {{{ Keyboard Configuration

" Change ESC to ENTER
inoremap <CR> <ESC>`^
vnoremap <CR> <ESC>
" jj is now ENTER in insert mode
inoremap jj <C-J>

" reselect visual block after indent
vnoremap < <gv
vnoremap > >gv

" Easy split navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Make Y behave like other Capitals (C, D, etc.)
noremap Y y$

" Map Q to repeat the last recorded macro
noremap Q @@

" Use space to toggle folds in normal mode
nnoremap <silent> <Space> za
" Create a fold using space in visual mode
vnoremap <silent> <Space> zf"

" Change :W to :w in command line
cnoreabbrev W t

" The button which will be refered to as <Leader> from here on out
let mapleader = ","

" Clear search results
nnoremap <Leader><Space> :nohlsearch<CR>

" Select all
noremap <Leader>a ggVG

" Open last buffer
noremap <Leader><Leader> <C-^>

" Do the splits
noremap <Leader>s :split<CR>
noremap <Leader>v :vsplit<CR>

" Change directory to current file dir
nnoremap <Leader>cd :cd %:p:h<CR>:pwd<CR>

" Toggle paste mode
set pastetoggle=<Leader>p

" Disable wierd Alt+Spacebar Character
inoremap <A-Space> <Space>

" }}}

" {{{ Options

" No backup, no swap
set nobackup
set noswapfile

" Custom invisibles
set list
set listchars=tab:▸\ ,trail:⋅,extends:❯,precedes:❮
set showbreak=↲

" Show line numbers
set relativenumber

" "Scrolling"
set scrolloff=5

" Splitting habits
set splitright splitbelow

" Do tabbing correctly
set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=2
" Tab settings for specific filetypes are described in TabSettings

" Sjarrappa youuu
set noerrorbells
set novisualbell
set t_vb=

" Show me what I'll do
set showcmd

" }}}

" {{{ Autocommands

" Reload .vimrc file when file is written
augroup AutoReloadVimRC
  au!
  au BufWritePost $MYVIMRC so $MYVIMRC
  au BufWritePost ~/dotfiles/vim/vimrc so $MYVIMRC
augroup END

" Static line numbers in insert mode
augroup LinuNumberToggle
  au!
  au InsertEnter * set number
  au InsertLeave * set relativenumber
augroup END

augroup TabSettings
  au!
  autocmd Filetype python setlocal tabstop=4
  autocmd Filetype python setlocal shiftwidth=4
  autocmd Filetype python setlocal softtabstop=4
  autocmd Filetype xml,html,xhtml setlocal tabstop=2
  autocmd Filetype xml,html,xhtml setlocal shiftwidth=2
  autocmd Filetype xml,html,xhtml setlocal softtabstop=2
augroup END

" }}}

" {{{ Plugin Configuration

"nnoremap <Leader>b :FufBuffer<CR>
"nnoremap <Leader>f :FufFile<CR>

nnoremap <Leader>8 :call Flake8()<CR>

nnoremap <Leader>b :Unite -start-insert buffer<CR>
"nnoremap <Leader>f :Unite -start-insert file_rec<CR>
nnoremap <Leader>f :Unite -start-insert file<CR>
nnoremap <Leader>d :Unite -start-insert file_rec/async<CR>

let g:fuf_file_exclude = '\v\~$|\.(o|exe|dll|bak|orig|swp|pyc|pyo)$|(^|[/\\])\.(hg|git|bzr)($|[/\\])'

"let g:airline_left_sep = ''
"let g:airline_right_sep = ''
let g:airline_powerline_fonts = 1

" }}}
