#!/bin/bash

###
# Switch between kubectl configurations with one command.
# NOTE: the switch is made globally.
#
# KUBECONFIG points to the configuration file for kube
# CONFIGDIR contains all possible kube configuration yaml files.
#
# The switch is made by changing the symlink of the kube configuration file
#
# Installation:
#   1. Add this file to your $PATH and make it executable
#   2. Check if kconf is runnable: `kconf`, you should get an error that
#      config file is not a symbolic link
#   3. Create the CONFIGDIR: `mkdir ~/.kube/configs/`
#   4. Move the current kube config file into CONFIGDIR:
#      `mv ~/.kube/config ~/.kube/configs/default`
#   5. Check available configs: `kconf`
#   6. Activate the previous config: `kconf default`
#

KUBECONFIG="${HOME}/.kube/config"
CONFIGDIR="${HOME}/.kube/configs/"

# Display help message, then exit
if [ "$1" == "-h" ] ||  [ "$1" == "--help" ]; then
  echo "Usage: $(basename $0) [CONFIG_FILE]"
  echo ""
  echo "CONFIG_FILE is the name of a file in the configuration directory which becomes"
  echo "    the current configuration for kubernetes if supplied. If not supplied it"
  echo "    will print the current configuration and the possible configurations."
  echo ""
  echo "The configuration directory is: ${CONFIGDIR}"
  echo ""
  echo "NOTE: the switch is made globally"
  exit 0
fi

config_file=$1

# If KUBECONFIG exists and is not a symbolic link, then exit
if [ -e "${KUBECONFIG}" ] && [ ! -L "${KUBECONFIG}" ]; then
  echo "Config file ${KUBECONFIG} is not a symbolic link!" 1>&2
  exit 1
fi

# If Config file does not exist, then exit
if [ ! -e "${CONFIGDIR}${config_file}" ]; then
  echo "Config file ${config_file} does not exist. Try one of $(ls -1 ${CONFIGDIR} | tr '\n' ',' | head --bytes=-1)." 1>&2
  exit 1
fi

# Show current config and list possible, then exit
if [ -z "${config_file}" ]; then
  if [ -L "${KUBECONFIG}" ]; then
    echo "Current config: $(basename "$(readlink -f ${KUBECONFIG})")."
  fi
  echo "Possible configs: $(ls -1 ${CONFIGDIR} | tr '\n' ',' | head --bytes=-1)." 1>&2
  exit 0
fi

# Remove old symbolic link
if [ -L "${KUBECONFIG}" ]; then
  rm "${KUBECONFIG}"
fi

# Create new symbolic link
ln -s "${CONFIGDIR}${config_file}" "${KUBECONFIG}"
