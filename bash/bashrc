# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

export PATH=$HOME/git_1.7/bin:$HOME/vim_7.3/bin:$PATH

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
#export HISTCONTROL=ignoredups

export HISTSIZE=
export HISTFILESIZE=


# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# enable programmable completion features (you dont need to enable
# this, if its already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi
# MacPorts Bash shell command completion
if [ -f /opt/local/etc/bash_completion ]; then
    . /opt/local/etc/bash_completion
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
xterm-color)
    #PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    #PS1='[\u@\h \W$(__git_ps1 " (%s)")]\$ '
    PS1="\e[0;32m\u@\h \e[0;31m\$(__git_ps1 '%s') \e[0;34m\W \e[m\$ "
    ;;
*)
    #PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
    #PS1='[\u@\h \W$(__git_ps1 " (%s)")]\$ '
    PS1="\u@\h\$(__git_ps1 ' %s') \W \$ "
    ;;
esac

# Comment in the above and uncomment this below for a color prompt
#PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007"'
    ;;
*)
    ;;
esac

# set pager
export PAGER=less
# to enable colors from ex. ls -r | less
export LESS="-SRc"

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

#if [ -f ~/.bash_aliases ]; then
#    . ~/.bash_aliases
#fi

# enable color support of ls and also add handy aliases
if [ "$TERM" != "dumb" ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'
    #alias dir='ls --color=auto --format=vertical'
    #alias vdir='ls --color=auto --format=long'
fi

# some more ls aliases
# always display pwd
alias ls='pwd && ls --color -hF'
alias ll='ls -l'
alias la='ls -a'
alias lla='ls -la'
alias lsa='ls -a'

# Input error (PEBCAK)
alias sl='ls'
alias dc='cd'
alias cd..='cd ..'

# If I'm stuck in vim mode
alias :q='exit'

# handy little additions for uptime info
alias uptime='uname -a && echo " "`date`"" && uptime && echo && free -m'

alias fsi='mono ~/FSharp2.0/bin/fsi.exe'
alias fsc='mono ~/FSharp2.0/bin/fsc.exe --warnaserror'

# Tmux colour fix
alias tmux="tmux -2"

# Canadian sudo
alias please="sudo"

if [[ -r $HOME/.rbenv ]]; then
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
  export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"
fi

# Check if thefuck is available
if hash thefuck 2> /dev/null; then
  eval $(thefuck --alias)
fi

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

export PATH=$HOME/.bin:$PATH

if [[ -f $HOME/.bashrc.local ]]; then
  source $HOME/.bashrc.local
fi

# Virtualenvwrapper setup
if  [[ -f /usr/local/bin/virtualenvwrapper.sh ]]; then
  export WORKON_HOME=$HOME/.virtualenvs
  export PROJECT_HOME=$HOME/projects
  source /usr/local/bin/virtualenvwrapper.sh
fi

# 365 python projects
export CHARGER_CONFIG=$HOME/github/charger/mr.developer.cfg
export MEDIATOR_CONFIG=$HOME/.config/mediator/mr.developer.cfg
export USAGE_SERVICES_CONFIG=$HOME/github/usage-services/mr.developer.cfg

# Go projects
export GOPATH=$HOME/go
export PATH=$GOPATH/bin:$PATH

# Rust stuff (https://rustup.rs/)
export PATH=$HOME/.cargo/bin:$PATH

# dotnet stuff
#export PATH=$HOME/.dotnet/:$PATH
export DOTNET_CLI_TELEMETRY_OPTOUT=true
export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=true

# pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# sonar-scanner
export PATH="$PATH:/opt/sonar-scanner/bin"

# istio
export PATH="$PATH:/opt/istio/bin"

# Java Home
export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"

# confluent
export CONFLUENT_HOME="/home/viktoralex/confluent/confluent-5.5.0"
export PATH="$PATH:/home/viktoralex/confluent/confluent-5.5.0/bin"

# Kubernetes
alias k='kubectl'
alias kgp='kubectl get pods | grep ${PWD##*/}'
alias kpg='kubectl -n postgres'
alias kl='kubectl logs'
alias kcurr='kubectl config current-context'
alias kuse='kubectl config use-context'

alias kn='kubectl_new'
alias kngp='kubectl_new get pods | grep ${PWD##*/}'
alias knpg='kubectl_new -n postgres'
alias knl='kubectl_new logs'
alias kncurr='kubectl_new config current-context'
alias knuse='kubectl_new config use-context'
export XDG_CONFIG_HOME=$HOME/.config
