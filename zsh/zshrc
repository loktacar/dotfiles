# vim: set fdm=marker :
#
# @author: Viktor Alex Brynjarsson
#
# My .zshrc
#             now with added oh-my-zsh
#

# {{{ oh-my-zsh

ZSH=$HOME/.oh-my-zsh
#ZSH_THEME="flazz"
plugins=(git git-remote-branch django fabric pip yum vi-mode colored-man mvn)

source $ZSH/oh-my-zsh.sh

# }}}

# {{{ modules, options and settings
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
PATH=$PATH:~/bin:/opt/local/bin:/sbin/
PAGER=less

# echo $(( sin(1/4.0)**2 + cos(1/4.0)**2 - 1 ))
zmodload zsh/mathfunc

setopt APPEND_HISTORY
setopt NOTIFY
setopt AUTO_MENU
setopt REC_EXACT
setopt EXTENDED_GLOB

unsetopt BEEP
unsetopt NO_MATCH

# }}}

# {{{ key bindings
# use a vim style input
bindkey -v

# search backwards and forwards using default vim keys (in normal mode)
bindkey -M vicmd '/' history-incremental-search-backward
bindkey -M vicmd '?' history-incremental-search-forward
# if I'm not in normal mode Ctrl+r or Ctrl+s will search backwards and
# forwards respectively
bindkey -M viins '^R' history-incremental-search-backward
bindkey -M viins '^S' history-incremental-search-forward
# same as normal mode if I've already started searching
#bindkey -M isearch '^R' history-incremental-pattern-search-backward
#bindkey -M isearch '^S' history-incremental-pattern-search-forward

autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search
bindkey "^[[B" down-line-or-beginning-search
#[[ -n "${key[Up]}" ]] && bindkey "${key[Up]}" history-beginning-search-backward
#[[ -n "${key[Down]}" ]] && bindkey "${key[Down]}" history-beginning-search-forward
# }}}

# {{{ completion
#setopt COMPLETE_IN_WORD

# try to fix errors too
#zstyle ':completion:*' completer _complete _match _approximate
#zstyle ':completion:*:match:*' original only
#zstyle -e ':completion:*:approximate:*' \
#        max-errors 'reply=($((($#PREFIX+$#SUFFIX)/3))numeric)'

# menu plox
#zstyle ':completion:*:*:*:*:*' menu yes select

# kill command completion
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*'   force-list always

# use /etc/hosts and known_hosts for hostname completion
#[ -r /etc/ssh/ssh_known_hosts ] && _global_ssh_hosts=(${${${${(f)"$(</etc/ssh/ssh_known_hosts)"}:#[\|]*}%%\ *}%%,*}) || _global_ssh_hosts=()
#[ -r ~/.ssh/known_hosts ] && _ssh_hosts=(${${${${(f)"$(<$HOME/.ssh/known_hosts)"}:#[\|]*}%%\ *}%%,*}) || _ssh_hosts=()
#[ -r ~/.ssh/config ] && _ssh_config=($(cat ~/.ssh/config | sed -ne 's/Host[=\t ]//p')) || _ssh_config=()
#[ -r /etc/hosts ] && : ${(A)_etc_hosts:=${(s: :)${(ps:\t:)${${(f)~~"$(</etc/hosts)"}%%\#*}##[:blank:]#[^[:blank:]]#}}} || _etc_hosts=()
#hosts=(
#  "$_ssh_config[@]"
#  "$_global_ssh_hosts[@]"
#  "$_ssh_hosts[@]"
#  "$_etc_hosts[@]"
#  "$HOST"
#  localhost
#)
#zstyle ':completion:*:hosts' hosts $hosts
zstyle -e ':completion::*:*:*:hosts' hosts 'reply=(${=${${(f)"$(cat {/etc/ssh_,~/.ssh/known_}hosts(|2)(N) /dev/null)"}%%[# ]*}//,/ })'

# }}}

# {{{ prompt

PROMPT='%{$fg[green]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}%~%{$fg[red]%} $(git_prompt_info) %{$reset_color%}
%{$reset_color%} α '
RPS1='ω'

# }}}

# {{{ aliases

# default flags and 'settings'
alias ls='ls --color -hF'
alias ll='ls -l'
alias la='ls -a'
alias lla='ls -al'
alias lsa='ls -a'
alias less='less -r'
alias df='df -h'

# oops
alias sl='ls'
alias dc='cd'
alias cd..='cd ..'

# if I'm stuck in vim mode
alias :q='exit'

# aliases pertaining to completion
alias man='nocorrect man'
alias mv='nocorrect mv'

# uptime gives me too little info, here a fix
# example:
# Linux loktacar-laptop 2.6.35-22-generic #35-Ubuntu SMP Sat Oct 16 20:36:48 UTC 2010 i686 GNU/Linux
#  Thu Mar 24 00:34:06 GMT 2011
#  00:34:06 up 4 days,  5:12,  2 users,  load average: 0.25, 0.42, 0.53
#
#              total       used       free     shared    buffers     cached
# Mem:          1974       1896         77          0         59       1178
# -/+ buffers/cache:        658       1315
# Swap:         7627          0       7627
alias uptime='uname -a && echo " "`date`"" && uptime && echo && free -m'

# tmux
alias tmux='tmux -2'
alias ta='tmux attach-session -t'
alias tl='tmux list-sessions'
alias tc='tmux new-session -s'

# tmux script
alias tw='tmux-workon'
alias twp='tmux-workon -pP'

# whe? wha? who?
alias whe='whereis'
alias wha='whatis'

# global aliases, can be used anywhere in a line
alias -g ...="../.."
alias -g ....="../../.."
alias -g .....="../../../.."
alias -g L="| less"
alias -g G="| grep"
alias -g H="| head"
alias -g T="| tail"

# }}}

# {{{ virtualenvwrapper

export WORKON_HOME=~/.virtualenvs
# Ubuntu
if [[ -r /usr/local/bin/virtualenvwrapper.sh ]]; then
  source /usr/local/bin/virtualenvwrapper.sh
fi
# Fedora
if [[ -r /usr/bin/virtualenvwrapper.sh ]]; then
  source /usr/bin/virtualenvwrapper.sh
fi

# }}}

# {{{ exports

# add bin folder in home to path
export PATH=$PATH:$HOME/.bin

# set up the cd path
if [[ -r $HOME/projects ]]; then
  export CDPATH=$CDPATH:$HOME/projects
fi

# }}}

# {{{ Local machine settings

if [[ -r $HOME/.localzshrc ]]; then
  source $HOME/.localzshrc
fi

# }}}
#

# Ruby Environment thingamijigger
if [[ -r $HOME/.rbenv ]]; then
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
  export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"
fi
